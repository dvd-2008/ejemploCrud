#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ejemploCrud
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Proyecto_02")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertALUMNO(ALUMNO instance);
    partial void UpdateALUMNO(ALUMNO instance);
    partial void DeleteALUMNO(ALUMNO instance);
    partial void InsertLOGIN(LOGIN instance);
    partial void UpdateLOGIN(LOGIN instance);
    partial void DeleteLOGIN(LOGIN instance);
    partial void InsertEvaluacion(Evaluacion instance);
    partial void UpdateEvaluacion(Evaluacion instance);
    partial void DeleteEvaluacion(Evaluacion instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ejemploCrud.Properties.Settings.Default.Proyecto_02ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ALUMNO> ALUMNO
		{
			get
			{
				return this.GetTable<ALUMNO>();
			}
		}
		
		public System.Data.Linq.Table<LOGIN> LOGIN
		{
			get
			{
				return this.GetTable<LOGIN>();
			}
		}
		
		public System.Data.Linq.Table<Evaluacion> Evaluacion
		{
			get
			{
				return this.GetTable<Evaluacion>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ALUMNO")]
	public partial class ALUMNO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_Alumno;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Dni;
		
		private EntitySet<Evaluacion> _Evaluacion;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_AlumnoChanging(int value);
    partial void OnId_AlumnoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnDniChanging(string value);
    partial void OnDniChanged();
    #endregion
		
		public ALUMNO()
		{
			this._Evaluacion = new EntitySet<Evaluacion>(new Action<Evaluacion>(this.attach_Evaluacion), new Action<Evaluacion>(this.detach_Evaluacion));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Alumno", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_Alumno
		{
			get
			{
				return this._Id_Alumno;
			}
			set
			{
				if ((this._Id_Alumno != value))
				{
					this.OnId_AlumnoChanging(value);
					this.SendPropertyChanging();
					this._Id_Alumno = value;
					this.SendPropertyChanged("Id_Alumno");
					this.OnId_AlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="VarChar(30)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dni", DbType="VarChar(8)")]
		public string Dni
		{
			get
			{
				return this._Dni;
			}
			set
			{
				if ((this._Dni != value))
				{
					this.OnDniChanging(value);
					this.SendPropertyChanging();
					this._Dni = value;
					this.SendPropertyChanged("Dni");
					this.OnDniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ALUMNO_Evaluacion", Storage="_Evaluacion", ThisKey="Id_Alumno", OtherKey="Alumno")]
		public EntitySet<Evaluacion> Evaluacion
		{
			get
			{
				return this._Evaluacion;
			}
			set
			{
				this._Evaluacion.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.ALUMNO1 = this;
		}
		
		private void detach_Evaluacion(Evaluacion entity)
		{
			this.SendPropertyChanging();
			entity.ALUMNO1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOGIN")]
	public partial class LOGIN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Usuario;
		
		private string _Usuario;
		
		private System.Nullable<int> _Password;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_UsuarioChanging(int value);
    partial void OnID_UsuarioChanged();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnPasswordChanging(System.Nullable<int> value);
    partial void OnPasswordChanged();
    #endregion
		
		public LOGIN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Usuario", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Usuario
		{
			get
			{
				return this._ID_Usuario;
			}
			set
			{
				if ((this._ID_Usuario != value))
				{
					this.OnID_UsuarioChanging(value);
					this.SendPropertyChanging();
					this._ID_Usuario = value;
					this.SendPropertyChanged("ID_Usuario");
					this.OnID_UsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usuario", DbType="VarChar(10)")]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="Int")]
		public System.Nullable<int> Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evaluacion")]
	public partial class Evaluacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_eva;
		
		private string _Curso;
		
		private System.Nullable<int> _Nota1;
		
		private System.Nullable<int> _Nota2;
		
		private System.Nullable<int> _Nota3;
		
		private System.Nullable<int> _Alumno;
		
		private EntityRef<ALUMNO> _ALUMNO1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_evaChanging(int value);
    partial void OnId_evaChanged();
    partial void OnCursoChanging(string value);
    partial void OnCursoChanged();
    partial void OnNota1Changing(System.Nullable<int> value);
    partial void OnNota1Changed();
    partial void OnNota2Changing(System.Nullable<int> value);
    partial void OnNota2Changed();
    partial void OnNota3Changing(System.Nullable<int> value);
    partial void OnNota3Changed();
    partial void OnAlumnoChanging(System.Nullable<int> value);
    partial void OnAlumnoChanged();
    #endregion
		
		public Evaluacion()
		{
			this._ALUMNO1 = default(EntityRef<ALUMNO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_eva", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_eva
		{
			get
			{
				return this._Id_eva;
			}
			set
			{
				if ((this._Id_eva != value))
				{
					this.OnId_evaChanging(value);
					this.SendPropertyChanging();
					this._Id_eva = value;
					this.SendPropertyChanged("Id_eva");
					this.OnId_evaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Curso", DbType="VarChar(20)")]
		public string Curso
		{
			get
			{
				return this._Curso;
			}
			set
			{
				if ((this._Curso != value))
				{
					this.OnCursoChanging(value);
					this.SendPropertyChanging();
					this._Curso = value;
					this.SendPropertyChanged("Curso");
					this.OnCursoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nota1", DbType="Int")]
		public System.Nullable<int> Nota1
		{
			get
			{
				return this._Nota1;
			}
			set
			{
				if ((this._Nota1 != value))
				{
					this.OnNota1Changing(value);
					this.SendPropertyChanging();
					this._Nota1 = value;
					this.SendPropertyChanged("Nota1");
					this.OnNota1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nota2", DbType="Int")]
		public System.Nullable<int> Nota2
		{
			get
			{
				return this._Nota2;
			}
			set
			{
				if ((this._Nota2 != value))
				{
					this.OnNota2Changing(value);
					this.SendPropertyChanging();
					this._Nota2 = value;
					this.SendPropertyChanged("Nota2");
					this.OnNota2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nota3", DbType="Int")]
		public System.Nullable<int> Nota3
		{
			get
			{
				return this._Nota3;
			}
			set
			{
				if ((this._Nota3 != value))
				{
					this.OnNota3Changing(value);
					this.SendPropertyChanging();
					this._Nota3 = value;
					this.SendPropertyChanged("Nota3");
					this.OnNota3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alumno", DbType="Int")]
		public System.Nullable<int> Alumno
		{
			get
			{
				return this._Alumno;
			}
			set
			{
				if ((this._Alumno != value))
				{
					if (this._ALUMNO1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlumnoChanging(value);
					this.SendPropertyChanging();
					this._Alumno = value;
					this.SendPropertyChanged("Alumno");
					this.OnAlumnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ALUMNO_Evaluacion", Storage="_ALUMNO1", ThisKey="Alumno", OtherKey="Id_Alumno", IsForeignKey=true)]
		public ALUMNO ALUMNO1
		{
			get
			{
				return this._ALUMNO1.Entity;
			}
			set
			{
				ALUMNO previousValue = this._ALUMNO1.Entity;
				if (((previousValue != value) 
							|| (this._ALUMNO1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ALUMNO1.Entity = null;
						previousValue.Evaluacion.Remove(this);
					}
					this._ALUMNO1.Entity = value;
					if ((value != null))
					{
						value.Evaluacion.Add(this);
						this._Alumno = value.Id_Alumno;
					}
					else
					{
						this._Alumno = default(Nullable<int>);
					}
					this.SendPropertyChanged("ALUMNO1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
